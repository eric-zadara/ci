name: Helm Chart Release workflow

on:
  push:
    branches:
      - master
    paths:
      - charts/**

permissions:
  contents: write
  pull-requests: write
  packages: write

jobs:
  find-release-changes:
    name: Change finder for charts folders
    runs-on: ubuntu-latest
    outputs:
      chart-paths: ${{ steps.change-finder.outputs.result }}
    steps:
      - uses: actions/checkout@v4
      - run: npm install @octokit/action
        name: Install Octokit
      - id: change-finder
        uses: actions/github-script@v7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          script: |
            import { Octokit } from "@octokit/action";
            import { execSync } from 'child_process';
            const octokit = new Octokit()
            const [owner, repo] = process.env.GITHUB_REPOSITORY.split('/');
            const latestRelease = await octokit.request('GET /repos/{owner}/{repo}/releases/latest', {
              owner: owner,
              repo: repo,
              headers: {
                'X-GitHub-Api-Version': '2022-11-28'
              }
            })
            console.log(`latest release: ${JSON.stringify(latestRelease.data)}`);
            execSync('git pull --tags');
            const status = execSync(`git diff --name-only ${latestRelease.data.tag_name} origin/master`, { encoding: 'utf-8'});
            console.log(status);
            const changes = status.split('\n');
            let charts_paths = new Set();
            for (const change of changes) {
              if (change.startsWith('charts/')) {
                  const library = change.split('/')[1];
                  charts_paths.add(library);
              };
            }
            charts_paths = Array.from(charts_paths);
            console.log(charts_paths);
            return charts_paths;

  validate-output:
    runs-on: ubuntu-latest
    needs: find-release-changes
    steps:
      - run: echo ${{fromJson(needs.find-release-changes.outputs.chart-paths)}}

  release-pr:
    runs-on: ubuntu-latest
    needs: find-release-changes
    strategy:
      fail-fast: false
      matrix:
        chart: ${{fromJson(needs.find-release-changes.outputs.chart-paths)}}
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: release-please
        with:
          path: charts/${{ matrix.chart }}
          changelog-path: CHANGELOG.md
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: helm
          package-name: ${{ matrix.chart }}
          monorepo-tags: true
          command: release-pr

  release-please-release:
    runs-on: ubuntu-latest
    needs: find-release-changes
    strategy:
      fail-fast: false
      matrix:
        chart: ${{fromJson(needs.find-release-changes.outputs.chart-paths)}}
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: tag-release
        with:
          path: charts/${{ matrix.chart }}
          changelog-path: CHANGELOG.md
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: helm
          monorepo-tags: true
          package-name: ${{ matrix.chart }}
          command: github-release
